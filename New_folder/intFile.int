begin_block f _ _ 
- x 10 T_0 
- 4 z T_1 
> T_0 T_1 6 
jump _ _ 21 
* 10 y T_2 
+ 3 T_2 T_3 
- 0 T_3 T_4 
+ x T_4 T_5 
- 0 T_5 T_6 
+ T_6 z T_7 
:= T_7 _ k 
* 3 y T_8 
+ x T_8 T_9 
+ T_9 z T_10 
+ T_10 3 T_11 
* 6 y T_12 
- T_11 T_12 T_13 
:= T_13 _ x 
jump _ _ 22 
:= 10 _ l 
- x 1 T_14 
par T_14 CV _ 
+ l k T_15 
par T_15 CV _ 
par T_16 RET _ 
call f _ _ 
- x 2 T_17 
par T_17 CV _ 
+ l k T_18 
par T_18 CV _ 
par T_19 RET _ 
call f _ _ 
+ T_16 T_19 T_20 
retv T_20 _ _ 
end_block f _ _ 
begin_block proc _ _ 
= k 10 40 
jump _ _ 43 
+ z 1 T_21 
:= T_21 _ z 
jump _ _ 50 
< k 10 45 
jump _ _ 48 
- z 1 T_22 
:= T_22 _ z 
jump _ _ 50 
par z REF _ 
call test _ _ 
retv msg _ _ 
end_block proc _ _ 
begin_block test _ _ 
:= 1 _ T_23 
par z REF _ 
par T_24 RET _ 
call proc _ _ 
+ 10 T_24 T_25 
+ T_25 10 T_26 
> x T_26 61 
jump _ _ 67 
> x 10 63 
jump _ _ 66 
- x 1 T_27 
:= T_27 _ x 
jump _ _ 66 
:= 0 _ T_23 
= x 10 69 
jump _ _ 71 
:= 4 _ x 
:= 0 _ T_23 
:= T_23 0 53 
< z 3 77 
jump _ _ 74 
+ i 1 T_28 
:= T_28 _ i 
jump _ _ 72 
end_block test _ _ 
begin_block testinMyCompiler _ _ 
:= 1 _ count 
par count CV _ 
par x CV _ 
par T_29 RET _ 
call f _ _ 
out T_29 _ _ 
par count REF _ 
call test _ _ 
halt _ _ _ 
end_block testinMyCompiler _ _ 
